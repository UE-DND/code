/**********************************

国王用金币支付他忠诚的骑士。在服役的第一天，骑士会收到一枚金币。
在接下来的两天（服务的第二天和第三天）中的每一天，骑士都会收到两个金币。
在接下来的三天（服役的第四天、第五天和第六天）的每一天，骑士都会收到三个金币。
在接下来的四天（服役的第七天、第八天、第九天和第十天）中的每一天，骑士都会收到四枚金币。
这种支付模式将无限期持续：在连续 N 天的每一天收到 N 个金币后，骑士将在接下来的 N+1 天的每一天收到 N+1 个金币，其中 N 是任意正整数。

您的程序将确定在任何给定天数内（从第 1 天开始）支付给骑士的金币总数。

输入格式:
输入包含至少 1 行，但不超过 21 行。
输入文件的每一行（除了最后一行）都包含问题的一个测试用例的数据，
由一个整数（在 1..10000 范围内）组成，代表天数。输入的结束由包含数字 0 的行表示。

输出格式:
每个测试用例只有一行输出。
这一行包含从对应的输入行算起的天数，
后跟一个空格和在给定的天数内支付给骑士的金币总数，从第 1 天开始。

输入样例:
23
11
6
7
0

输出样例:
23 105
11 35
6 14
7 18

***********************************/

#include <stdio.h>

int main(void) {
    int days;
    while (scanf("%d", &days) && days != 0) {  //0为结束标志
        int coins = 0, currentDay = 1, n = 1;  //currentDay为当前计算到的天数，n为支付周期

        while (currentDay <= days) {
            for (int i = 0; i < n && currentDay <= days; i++) {
                coins += n;
                currentDay++;
            }
            n++; //周期加1，即coin+1
        }

        printf("%d %d\n", days, coins);
    }
}

