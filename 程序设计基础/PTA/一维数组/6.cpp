/**********************************

微博上有个“点赞”功能，你可以为你喜欢的博文点个赞表示支持。
每篇博文都有一些刻画其特性的标签，而你点赞的博文的类型，也间接刻画了你的特性。
本题就要求你写个程序，通过统计一个人点赞的纪录，分析这个人的特性。

输入格式：
输入在第一行给出一个正整数N（≤1000），是该用户点赞的博文数量。
随后N行，每行给出一篇被其点赞的博文的特性描述，格式为“K F1⋯FK”，
其中 1 ≤ K ≤ 10，Fi（i=1,⋯,K）是特性标签的编号，
我们将所有特性标签从1到1000编号。数字间以空格分隔。

输出格式：
统计所有被点赞的博文中最常出现的那个特性标签，在一行中输出它的编号和出现次数，
数字间隔1个空格。如果有并列，则输出编号最大的那个。

输入样例：
4(N)
3(K) 889 233 2
5(K) 100 3 233 2 73
4(K) 3 73 889 2
2(K) 233 123

输出样例：
233 3

***********************************/

#include <stdio.h>

int main(void) {
    int N;
    scanf("%d", &N);  //点赞的博文数量

    int count[1001] = {0};  //特性标签

    for (int i = 0; i < N; i++) {
        int K;
        scanf("%d", &K);

        for (int j = 0; j < K; j++) {
            int tag;
            scanf("%d", &tag);
            count[tag]++;
        }
    }

    int max_count = 0;  //目前为止最常见标签的出现次数
    int max_tag = 0;  //标签i出现的次数
    //标签编号从1开始，max_count必须小于1
    for (int i = 1; i <= 1001; i++) {
        if (count[i] > max_count || (count[i] == max_count && i > max_tag)) {
            //如果当前标签的出现次数 count[i] 和 max_count 相同，
            //检查编号 i 是否更大。
            //如果是，就更新 max_tag，确保选择编号最大的标签。
            max_count = count[i];
            max_tag = i;
        }
    }

    printf("%d %d", max_tag, max_count);

    printf("\n");

return 0;
}
